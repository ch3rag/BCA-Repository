<Application x:Class="MyImageProcessing.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MyImageProcessing"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Image x:Key="FlipHorizontalImage" Source="./Images/flipvertical.png"/>
        <Image x:Key="FlipVerticalImage" Source="./Images/fliphorizontal.png"/>
        <Image x:Key="RotateLeft" Source="./Images/rotateleft.png"/>
        <Image x:Key="RotateRight" Source="./Images/rotateright.png"/>
        <Image x:Key="Crop" Source="./Images/crop.png"/>
        <Image x:Key="Select" Source="./Images/select.png"/>
        <Image x:Key="Text" Source="./Images/text.png"/>
        <Image x:Key="Circle" Source="./Images/circle.png"/>
        <Image x:Key="Line" Source="./Images/line.png"/>
        <Image x:Key="Rectangle" Source="./Images/rectangle.png"/>
        <Image x:Key="Bin" Source="./Images/delete.png"/>
        <Image x:Key="Dropper" Source="./Images/dropper.png"/>
        <Image x:Key="Paint" Source="./Images/brush.png"/>
        <Image x:Key="Undo" Source="./Images/undo.png"/>
        <Image x:Key="Redo" Source="./Images/redo.png"/>
        <Image x:Key="Reset" Source="./Images/reset.png"/>

        <Style x:Key="ToolBarButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="25"></Setter>
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="Margin" Value="3, 3"></Setter>
        </Style>

        <Style x:Key="ToolBarToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Width" Value="25"></Setter>
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="Margin" Value="3, 3"></Setter>
        </Style>

        <Style x:Key="LineSeperator" TargetType="{x:Type Line}">
            <Setter Property="X1" Value="0"></Setter>
            <Setter Property="X1" Value="0"></Setter>
            <Setter Property="X2" Value="30"></Setter>
            <Setter Property="Y2" Value="0"></Setter>
            <Setter Property="Stroke" Value="LightGray"></Setter>
            <Setter Property="StrokeThickness" Value="2"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
        </Style>

        <Style x:Key="LineSeperatorVertical" TargetType="{x:Type Line}">
            <Setter Property="X1" Value="0"></Setter>
            <Setter Property="X1" Value="0"></Setter>
            <Setter Property="X2" Value="0"></Setter>
            <Setter Property="Y2" Value="30"></Setter>
            <Setter Property="Stroke" Value="LightGray"></Setter>
            <Setter Property="StrokeThickness" Value="2"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
        </Style>

        <Style x:Key="MyExpander" TargetType="{x:Type Expander}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <DockPanel Background="WhiteSmoke">
                            <ToggleButton DockPanel.Dock="Left" x:Name="HeaderSite" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"></ToggleButton>
                            <ContentPresenter DockPanel.Dock="Right" x:Name="ExpandSite">
                                <ContentPresenter.LayoutTransform>
                                    <ScaleTransform ScaleX="0"></ScaleTransform>
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="LayoutTransform.(ScaleTransform.ScaleX)">
                                            <DoubleAnimation To="1" Duration="0:0:0.4"  AccelerationRatio="0.5"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="LayoutTransform.(ScaleTransform.ScaleX)">
                                            <DoubleAnimation To="0" Duration="0:0:0.4" AccelerationRatio="0.5"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Right">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                                <Setter Property="Style" TargetName="HeaderSite">
                                    <Setter.Value>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Border Padding="{TemplateBinding Padding}">
                                                            <Grid SnapsToDevicePixels="False">
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="30"/>
                                                                    <RowDefinition Height="*"/>
                                                                </Grid.RowDefinitions>
                                                                <Grid Grid.Row="1">
                                                                    <Grid.LayoutTransform>
                                                                        <TransformGroup>
                                                                            <RotateTransform Angle="90"/>
                                                                        </TransformGroup>
                                                                    </Grid.LayoutTransform>
                                                                    <Ellipse x:Name="circle" Fill="Transparent" HorizontalAlignment="Center" Height="19" Stroke="Black" VerticalAlignment="Center" Width="19"/>
                                                                    <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="CadetBlue" StrokeThickness="2" VerticalAlignment="Center">
                                                                        <Path.LayoutTransform>
                                                                            <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                                                                        </Path.LayoutTransform>
                                                                    </Path>
                                                                </Grid>
                                                                <Label Content="Properties" Grid.Row="0" Foreground="Black" FontSize="18">
                                                                    <Label.LayoutTransform>
                                                                        <RotateTransform Angle="-90"/>
                                                                    </Label.LayoutTransform>
                                                                </Label>
                                                                <Label Content="History" Grid.Row="2" VerticalAlignment="Top"  Foreground="Black" FontSize="18">
                                                                    <Label.LayoutTransform>
                                                                        <RotateTransform Angle="-90"/>
                                                                    </Label.LayoutTransform>
                                                                </Label>
                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Trigger.EnterActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(RotateTransform.Angle)" Storyboard.TargetName="arrow">
                                                                            <DoubleAnimation To="-180" Duration="0:0:0.5"/>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </Trigger.EnterActions>
                                                                <Trigger.ExitActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(RotateTransform.Angle)" Storyboard.TargetName="arrow">
                                                                            <DoubleAnimation To="0" Duration="0:0:0.5"/>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </Trigger.ExitActions>
                                                            </Trigger>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Stroke" TargetName="circle" Value="DarkBlue"/>
                                                                <Setter Property="Fill" TargetName="circle" Value="DarkBlue"/>
                                                                <Setter Property="Stroke" TargetName="arrow" Value="White"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PanelExpander" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Margin" Value="0,10,10,0"/>
            <Setter Property="Padding" Value="2, 3, 2, 3"></Setter>
            <Setter Property="Width" Value="200"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <DockPanel>
                                <ToggleButton FontSize="14" FontWeight="Black" FontFamily="Trebuchet MS" x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <ToggleButton.FocusVisualStyle>
                                        <Style>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Border>
                                                            <Rectangle Margin="0" SnapsToDevicePixels="True" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.FocusVisualStyle>
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}"/>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <ContentPresenter x:Name="ExpandSite" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" DockPanel.Dock="Bottom" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Visible" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="Auto">
                                    <ContentPresenter.LayoutTransform>
                                        <ScaleTransform ScaleY="0"/>
                                    </ContentPresenter.LayoutTransform>
                                </ContentPresenter>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleY)">
                                            <DoubleAnimation To="1" Duration="0:0:0.4"  AccelerationRatio="0.5"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleY)">
                                            <DoubleAnimation To="0" Duration="0:0:0.4"  AccelerationRatio="0.5"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Down">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Bottom"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Top"/>
                                <Setter Property="Style" TargetName="HeaderSite">
                                    <Setter.Value>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Border Padding="{TemplateBinding Padding}">
                                                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="30"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Grid Grid.Column="1">
                                                                    <Grid.LayoutTransform>
                                                                        <TransformGroup>
                                                                            <RotateTransform Angle="0"/>
                                                                        </TransformGroup>
                                                                    </Grid.LayoutTransform>
                                                                    <Ellipse x:Name="circle" Fill="Transparent" HorizontalAlignment="Center" Height="19" Stroke="Black" VerticalAlignment="Center" Width="19"/>
                                                                    <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="CadetBlue" StrokeThickness="2" VerticalAlignment="Center">
                                                                        <Path.LayoutTransform>
                                                                            <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                                                                        </Path.LayoutTransform>
                                                                    </Path>
                                                                </Grid>
                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Trigger.EnterActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(RotateTransform.Angle)" Storyboard.TargetName="arrow">
                                                                            <DoubleAnimation To="-180" Duration="0:0:0.5"/>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </Trigger.EnterActions>
                                                                <Trigger.ExitActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(RotateTransform.Angle)" Storyboard.TargetName="arrow">
                                                                            <DoubleAnimation To="0" Duration="0:0:0.5"/>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </Trigger.ExitActions>
                                                            </Trigger>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Stroke" TargetName="circle" Value="DarkBlue"/>
                                                                <Setter Property="Fill" TargetName="circle" Value="DarkBlue"/>
                                                                <Setter Property="Stroke" TargetName="arrow" Value="White"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Width" Value="100"></Setter>
                    <Setter Property="Margin" Value="0, 10, 0, 5"></Setter>
                </Style>
            </Style.Resources>
        </Style>
        
    </Application.Resources>
</Application>
